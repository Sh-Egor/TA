|generator
Load <= gen_vhdl:inst7.Load
clock => gen_vhdl:inst7.Clock
clock => inst~0.IN0
clock => inst.CLK
Addbit => inst15.DATAIN
start => gen_vhdl:inst7.X3
N_flg => gen_vhdl:inst7.X4
Shift <= gen_vhdl:inst7.Shift
Add <= gen_vhdl:inst7.Add
Done <= gen_vhdl:inst7.Done
N_st <= gen_vhdl:inst7.StNorm
N_gen <= gen_vhdl:inst7.Normtick


|generator|gen_vhdl:inst7
Clock => s~10.DATAIN
X1 => s~2.DATAB
X1 => s~3.DATAB
X2 => Selector1.IN4
X2 => Selector2.IN1
X3 => s~0.DATAB
X3 => Selector0.IN1
X4 => s~5.DATAB
X4 => Selector0.IN2
X4 => Selector0.IN3
Load <= Load~0.DB_MAX_OUTPUT_PORT_TYPE
Shift <= Shift~0.DB_MAX_OUTPUT_PORT_TYPE
Add <= Add~0.DB_MAX_OUTPUT_PORT_TYPE
StNorm <= StNorm~0.DB_MAX_OUTPUT_PORT_TYPE
Normtick <= Normtick~0.DB_MAX_OUTPUT_PORT_TYPE
Done <= Done~0.DB_MAX_OUTPUT_PORT_TYPE


|generator|lpm_counter1:inst14
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]


|generator|lpm_counter1:inst14|lpm_counter:lpm_counter_component
clock => cntr_csh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_csh:auto_generated.q[0]
q[1] <= cntr_csh:auto_generated.q[1]
q[2] <= cntr_csh:auto_generated.q[2]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|generator|lpm_counter1:inst14|lpm_counter:lpm_counter_component|cntr_csh:auto_generated
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT


