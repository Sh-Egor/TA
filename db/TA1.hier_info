|P_UA
Load <= Q_to_Y:inst1.Y1
clock => inst8~0.IN0
clock => inst8.CLK
bit => inst11.IN0
bit => inst10~0.IN1
start => QX_to_Q:inst.X3
Shift <= Q_to_Y:inst1.Y2
Add <= Q_to_Y:inst1.Y3
Done <= Q_to_Y:inst1.Y4


|P_UA|Q_to_Y:inst1
Y1 <= inst3.DB_MAX_OUTPUT_PORT_TYPE
Q0 => inst.IN0
Q0 => inst4.IN0
Q1 => inst1.IN0
Q1 => inst5.IN1
Q2 => inst3.IN2
Q2 => inst2.IN0
Y2 <= inst4.DB_MAX_OUTPUT_PORT_TYPE
Y3 <= inst5.DB_MAX_OUTPUT_PORT_TYPE
Y4 <= inst6.DB_MAX_OUTPUT_PORT_TYPE


|P_UA|QX_to_Q:inst
Q0Out <= P_q0:inst.Q0out
Q0 => P_q0:inst.Q0
Q0 => P_q1:inst1.Q0
Q0 => P_q2:inst2.Q0
Q1 => P_q0:inst.Q1
Q1 => P_q1:inst1.Q1
Q1 => P_q2:inst2.Q1
Q1Out <= P_q1:inst1.Q1out
Q2 => P_q1:inst1.Q2
Q2 => P_q2:inst2.Q2
X2 => P_q1:inst1.X2
X2 => P_q2:inst2.X2
Q2Out <= P_q2:inst2.Q2out
X1 => P_q2:inst2.X1
X3 => P_q2:inst2.X3


|P_UA|QX_to_Q:inst|P_q0:inst
Q0out <= inst.DB_MAX_OUTPUT_PORT_TYPE
Q0 => inst1.IN0
Q1 => inst.IN1


|P_UA|QX_to_Q:inst|P_q1:inst1
Q1out <= inst5.DB_MAX_OUTPUT_PORT_TYPE
Q0 => inst4.IN0
Q0 => inst1.IN0
X2 => inst4.IN1
Q2 => inst3.IN1
Q1 => inst2.IN0


|P_UA|QX_to_Q:inst|P_q2:inst2
Q2out <= inst7.DB_MAX_OUTPUT_PORT_TYPE
Q0 => inst1.IN0
Q0 => inst6.IN0
Q1 => inst2.IN0
Q2 => inst4.IN2
Q2 => inst3.IN0
X1 => inst5.IN0
X2 => inst6.IN2
X3 => inst.IN3


|P_UA|lpm_counter3:inst13
clock => lpm_counter:lpm_counter_component.clock
q[0] <= lpm_counter:lpm_counter_component.q[0]
q[1] <= lpm_counter:lpm_counter_component.q[1]
q[2] <= lpm_counter:lpm_counter_component.q[2]
q[3] <= lpm_counter:lpm_counter_component.q[3]


|P_UA|lpm_counter3:inst13|lpm_counter:lpm_counter_component
clock => cntr_dsh:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_dsh:auto_generated.q[0]
q[1] <= cntr_dsh:auto_generated.q[1]
q[2] <= cntr_dsh:auto_generated.q[2]
q[3] <= cntr_dsh:auto_generated.q[3]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|P_UA|lpm_counter3:inst13|lpm_counter:lpm_counter_component|cntr_dsh:auto_generated
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT


